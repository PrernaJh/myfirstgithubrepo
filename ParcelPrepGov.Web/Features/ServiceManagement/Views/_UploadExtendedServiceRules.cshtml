@model UploadExtendedServiceRulesViewModel

@using (Html.BeginForm("ImportBinMappings", "ServiceManagement", FormMethod.Post, new { @id = "uploadForm" }))
{
    @(Html.DevExtreme().Form<UploadExtendedServiceRulesViewModel>()
                .ID("UploadExtendedServiceRulesForm")
                .ColCount(2)
                .Items(groups =>
                {
                    groups.AddGroup()
                    .ColSpan(2)
                    .Items(items =>
                    {
                        items.AddSimpleFor(m => m.UploadStartDate)
                        .Label(l => l.Text("Start Date"))
                        .IsRequired(true)
                        .Template(@<text>
	                        @(Html.DevExtreme().DateBoxFor(m => m.UploadStartDate)
                            .ID("startDate")
                            .Name("UploadStartDate")
                            .Placeholder("")
                            .PickerType(DateBoxPickerType.Rollers)
                            .OnInitialized("PPG.manageServiceRules.startDate_onInitialized")
                            )
	                    </text>);
                    });

                    groups.AddGroup()
                    .ColSpan(2)
                    .ColCount(2)
                    .Items(items =>
                    {
                        items.AddSimpleFor(m => m.UploadFile)
                        .IsRequired(true)
                        .Template(@<text>
	                        @(Html.DevExtreme().FileUploader()
                                .ID("fileUploader")
                                .Name("UploadFile")
                                .SelectButtonText("Upload Future Service Rule Extensions")
                                .LabelText("")
                                .Accept("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel")
                                .UploadMode(FileUploadMode.UseForm)
                                .AllowedFileExtensions(new[] { ".xls", ".xlsx" })
                                .OnValueChanged("PPG.uploadServiceRules.fileUploader_onValueChanged")
                                )
	                        </text>);
                    });

                    groups.AddGroup()
                    .ColSpan(2)
                    .ColCount(2)
                    .Items(items =>
                    {
                        items.AddButton()
                            .ButtonOptions(b =>
                                b
                                .ID("cancelButton")
                                .Text("Cancel")
                                .Type(ButtonType.Normal)
                                .UseSubmitBehavior(false)
                                .OnClick("PPG.uploadServiceRules.extendedCancelButton_onClick")
                            );

                        items.AddButton()
                            .ButtonOptions(b =>
                                b
                                .ID("uploadFileButton")
                                .Text("Upload")
                                .Type(ButtonType.Success)
                                .UseSubmitBehavior(false)
                                .OnClick("PPG.uploadServiceRules.extendedUploadFileButton_onClick")
                            );
                    });
                })
        )
}


