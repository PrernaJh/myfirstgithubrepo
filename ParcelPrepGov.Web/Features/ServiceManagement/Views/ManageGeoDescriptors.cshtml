@model ManageGeoDescriptorsViewModel

@{
    ViewData["Title"] = "Manage UPS GEO Descriptors";
}

<h2 class="content-block">Service Management <i class="dx-icon dx-icon-spinright"></i> Manage GEO Descriptors</h2>
@*<p class="page-desc">UPS GEO descriptors.</p>*@

<div class="content-block">
    <div class="ppg-container-cols">
         
        <div style="grid-column: 1 / span 12;">
            <div class="ppg-label">Location</div>
            @(Html.DevExtreme().SelectBox()
                            .ID("geoDescriptorsSiteSelectBox")
                            .DataSource(d => d.Mvc().Controller("Common").LoadAction("GetSiteSelectBoxData"))
                            .DeferRendering(false)
                            .DisplayExpr("Description")
                            .ValueExpr("Name")
                            .Placeholder("")
                            .OnValueChanged("PPG.manageGeoDescriptors.selectBox_onValueChanged")
                        )
        </div>
    </div>
</div>

<div class="content-block">
    <div class="dx-card" id="GeoDescriptorsCard">
        <div class="ppg-card-header-cols">
            <div style="grid-column: 1 / span 9;">
                @(Html.DevExtreme().Button()
                    .ID("upload-button")
                    .Icon("upload")
                    .OnClick("PPG.manageGeoDescriptors.uploadButton_onClick")
                    )
                @(Html.DevExtreme().Tooltip()
                    .Target("#upload-button")
                    .Position(Position.Top)
                    .ContentTemplate("Upload")
                    .ShowEvent("mouseenter")
                    .HideEvent("mouseleave"))
            </div>
            <div style="grid-column: 10 / span 3;" class="right">
                @(Html.DevExtreme().Button()
                .ID("exportButton")
                .Icon("xlsxfile")
                .Disabled(true)
                .OnClick("PPG.manageGeoDescriptors.exportButton_onClick")
                )
                @(Html.DevExtreme().Tooltip()
                    .ID("exportButtonTooltip")
                    .Target("#exportButton")
                    .Position(Position.Top)
                    .ContentTemplate("Download")
                    .ShowEvent("mouseenter")
                    .HideEvent("mouseleave"))
            </div>
        </div>
        @(Html.DevExtreme().DataGrid<ActiveGroupViewModel>()
            .DataSource(d => d.Mvc()
            .Controller("ServiceManagement")
            .LoadAction(nameof(ParcelPrepGov.Web.Features.ServiceManagement.ServiceManagementController.GetGeoDescriptorsActiveGroups))
            .LoadParams(new { siteName = new JS("PPG.manageGeoDescriptors.getSelectedGeoDescriptorsSite") })
            .Key("Id"))
            .ID("GeoDescriptorsActiveGroupsGrid")
            .Selection(s => s.Mode(SelectionMode.Single))
            .HoverStateEnabled(true)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .ShowBorders(true)
            .HoverStateEnabled(true)
            .FocusedRowEnabled(true)
            .OnFocusedRowChanged("PPG.manageGeoDescriptors.grid_onFocusedRowChanged")
            .LoadPanel(x => x.Enabled(true))
            .AllowColumnResizing(true)
            .AllowColumnReordering(true)
            .SearchPanel(searchPanel => searchPanel.Visible(false))
            .FilterRow(f => f.Visible(true))
            .Columns(columns => {
                columns.Add().DataField("StartDate").Caption("Start Date").DataType(GridColumnDataType.Date).Format(Format.ShortDate).SortOrder(SortOrder.Desc);
                columns.Add().DataField("Filename").Caption("File Name");
                columns.Add().DataField("UploadedBy").Caption("Upload By").Width(125);
                columns.Add().DataField("UploadDate").Caption("Upload Date\\Time").DataType(GridColumnDataType.DateTime).Format(Format.ShortDateShortTime).Width(200);
            })

        .Paging(paging => paging.PageSize(10))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 5, 10, 20 });
            pager.ShowInfo(true);
        })
        )
    </div>
</div>

@(Html.DevExtreme().Popup()
        .ID("uploadZipMaps-popup")
        .Width(800)
        .Height(700)
        .ShowTitle(true)
        .Title("Upload")
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(false)
        .OnShowing("PPG.manageGeoDescriptors.popup_onShowing")
        .OnContentReady("PPG.manageGeoDescriptors.popup_OnContentReady")
        .OnHiding("PPG.manageGeoDescriptors.popup_onHiding")
        .ContentTemplate(new TemplateName("uploadZipMaps-template")))

@using (Html.DevExtreme().NamedTemplate("uploadZipMaps-template"))
{
    @using (Html.BeginForm("ImportGeoDescriptors", "ServiceManagement", FormMethod.Post, new { @id = "formManageGeoDescriptors" }))
    {
        @(Html.DevExtreme().Form<ManageGeoDescriptorsViewModel>()
            .ID("ManageGeoDescriptorsForm")
            .ColCount(2)
            .Items(groups =>
            {
                groups.AddGroup()
                .ColSpan(2)
                .Items(items =>
                {
                    items.AddSimpleFor(m => m.UploadStartDate).Template(@<text>
	                        @(Html.DevExtreme().DateBoxFor(m => m.UploadStartDate)
                                .Name("UploadStartDate")
                                .Placeholder("")
                                .PickerType(DateBoxPickerType.Rollers)
                                .OnValueChanged("PPG.manageGeoDescriptors.startDate_onValueChanged")
                                .OnInitialized("PPG.manageGeoDescriptors.startDate_onInitialized")
                            )
	                    </text>);
                });

                groups.AddGroup()
                .ColSpan(2)
                .ColCount(2)
                .Items(items =>
                {
                    items.AddSimpleFor(m => m.UploadFile).Template(@<text>
	                    @(Html.DevExtreme().FileUploader()
		                    .ID("fiveDigitZipFileUploader")
                            .SelectButtonText("5 Digit Zip File")
                            .LabelText("")
                            .Name("UploadFile")
                            .Multiple(false)
                            .Accept("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel")
                            .UploadMode(FileUploadMode.UseForm)
                            .AllowedFileExtensions(new[] { ".xls", ".xlsx" })
                            .OnValueChanged("PPG.manageGeoDescriptors.fiveDigitZipFileUploader_onValueChanged")
                            )
	                    </text>);
                });

                groups.AddGroup()
                .ColSpan(2)
                .ColCount(2)
                .Items(items =>
                {
                    items.AddButton()
                        .ButtonOptions(b =>
                            b
                            .ID("cancelButton")
                            .Text("Cancel")
                            .Type(ButtonType.Normal)
                            .UseSubmitBehavior(false)
                            .OnClick("PPG.manageGeoDescriptors.cancelButton_onClick")
                        );

                    items.AddButton()
                        .ButtonOptions(b =>
                            b
                            .ID("importGeoDescriptorsButton")
                            .Text("Upload")
                            .Type(ButtonType.Success)
                            .UseSubmitBehavior(false)
                            .OnClick("PPG.manageGeoDescriptors.importButton_onClick")
                        );
                });
            })
        )
    }
}


@(Html.DevExtreme().DataGrid<IEnumerable<ZipMapViewModel>>()
    .ID("exportGrid")
    .Export(e => e.Enabled(true).AllowExportSelectedData(false))
    .OnExporting("PPG.manageGeoDescriptors.exportGrid_onExporting")
    .Visible(false))


@section Scripts {
    <environment include="Development">
        <script src="~/js/ppg/ppg.service-management-geo-descriptors.bundle.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/ppg/ppg.service-management-geo-descriptors.bundle.min.js" asp-append-version="true"></script>
    </environment>
    
    <script>
        document.addEventListener('DOMContentLoaded', function documentReady() {
            this.removeEventListener('DOMContentLoaded', documentReady);
            PPG.manageGeoDescriptors.init();
        });
    </script>
}


