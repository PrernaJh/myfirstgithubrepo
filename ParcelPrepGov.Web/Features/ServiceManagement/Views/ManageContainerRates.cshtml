@{
    ViewData["Title"] = "Service Management";
}

<h2 class="content-block">Service Management <i class="dx-icon dx-icon-spinright"></i> Manage Container Rates</h2>
<p class="page-desc">Container Rates is a table that represent all package rates from carrier and charge to customer.</p>

<div class="content-block">
    <div class="ppg-container-cols">
        <div style="grid-column: 1 / span 12;">
            <div class="ppg-label">Location</div>
            @(Html.DevExtreme().SelectBox()
                .Name("CustomerName")
                .Placeholder("")
                .DataSource(d => d.Mvc().Controller("Common").LoadAction("GetSiteSelectBoxData"))
                .DeferRendering(false)
                .DisplayExpr("Description")
                .ValueExpr("Name")
                .DataSourceOptions(opt =>
                {
                    if (User.GetSite() != SiteConstants.AllSites)
                    {
                        opt.Filter($"['Name', '=', '{User.GetSite()}']");
                    }
                })
                .OnValueChanged("PPG.manageContainerRates.onSiteValueChanged")
)
        </div>
    </div>
</div>

<div class="content-block">
    <div class="dx-card" id="manageCostsAndChargesCard">
        <div class="ppg-card-header-cols">
            <div style="grid-column: 1 / span 8;">
                @(Html.DevExtreme().Button().ID("upload-button").Icon("upload").OnClick("PPG.manageContainerRates.uploadButton_onClick"))
                @(Html.DevExtreme().Tooltip()
                        .Target("#upload-button")
                        .Position(Position.Top)
                        .ContentTemplate("Upload")
                        .ShowEvent("mouseenter")
                        .HideEvent("mouseleave"))
            </div>
            <div style="grid-column: 9 / span 4;" class="right">
                @(Html.DevExtreme().Button()
                .ID("exportButton")
                .Icon("xlsxfile")
                .Disabled(true)
                .OnClick("PPG.manageContainerRates.exportButton_onClick"))
                @(Html.DevExtreme().Tooltip()
                    .ID("exportButtonTooltip")
                    .Target("#exportButton")
                    .Position(Position.Top)
                    .ContentTemplate("Download")
                    .ShowEvent("mouseenter")
                    .HideEvent("mouseleave"))
            </div>
            @*<div style="grid-column: 10 / span 3;" id="gridFilterContainer" class="right"></div>*@
        </div>
        @(Html.DevExtreme().DataGrid()
    .DataSource(d => d.Mvc()
    .Controller("ServiceManagement")
    .LoadAction(nameof(ParcelPrepGov.Web.Features.ServiceManagement.ServiceManagementController.GetCurrentContainerRates)).LoadParams(new { siteName = new JS("PPG.manageContainerRates.getSelectedSite") })
    .OnLoading("PPG.manageContainerRates.grid_onLoading")
    .OnLoaded("PPG.manageContainerRates.grid_onLoaded")
    .Key("Id"))
    .ID("currentRatesGrid")
    .LoadPanel(x => x.Enabled(true))
    .Visible(false)
    .ShowColumnLines(true)
    .ShowRowLines(true)
    .ShowBorders(true)
    .Selection(s => s.Mode(SelectionMode.Single))
    .HoverStateEnabled(true)
    .FocusedRowEnabled(true)
    .OnSelectionChanged("PPG.manageContainerRates.grid_onSelectionChanged")
    .FilterRow(f => f.Visible(true))
    .Columns(columns => {
        columns.Add().DataField("StartDate").Caption("Start Date").DataType(GridColumnDataType.Date).Format(Format.ShortDate).SortOrder(SortOrder.Desc);
        columns.Add().DataField("Filename").Caption("File Name");
        columns.Add().DataField("UploadedBy").Caption("Upload By").Width(125);
        columns.Add().DataField("UploadDate").Caption("Upload Date\\Time").DataType(GridColumnDataType.DateTime).Format(Format.ShortDateShortTime).Width(200);
    })
        .Paging(paging => paging.PageSize(10))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 5, 10, 20 });
            pager.ShowInfo(true);
        })
        )
    </div>
</div>

@(Html.DevExtreme().Popup()
        .ID("uploadRates-popup")
        .Width(500)
        .Height(450)
        .ShowTitle(true)
        .Title("Upload")
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(false)
        .OnShowing("PPG.manageContainerRates.popup_onShowing")
        .OnHiding("PPG.manageContainerRates.popup_onHiding")
        .ContentTemplate(new TemplateName("uploadRates-form-template")))

@using (Html.DevExtreme().NamedTemplate("uploadRates-form-template"))
{
    <form method="post" enctype="multipart/form-data">
        <div class="ppg-container-rows-main-footer">
            <main>
                <div class="ppg-container-cols">
                    <div style="grid-column: 1 / span 12;">
                        <div class="ppg-label">Start Date</div>
                        @(Html.DevExtreme().DateBox().ID("startDate")
                            .Name("StartDate")
                            .Placeholder("")
                            .PickerType(DateBoxPickerType.Rollers)
                            .OnValueChanged("PPG.manageContainerRates.startDate_onValueChanged")
                            .OnInitialized("PPG.manageContainerRates.startDate_onInitialized")
                        )
                    </div>
                    <div style="grid-column: 1 / span 12;">
                        @(Html.DevExtreme().FileUploader()
                            .ID("fileUploader")
                            .Name("UploadFile")
                            .SelectButtonText("Upload Costs and Charges")
                            .LabelText("")
                            .Accept("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel")
                            .UploadMode(FileUploadMode.UseForm)
                            .AllowedFileExtensions(new[] { ".xls", ".xlsx" })
                            .OnValueChanged("PPG.manageContainerRates.fileUploader_onValueChanged")
                            )
                        <span style="margin-left: 20px;">Allowed file extensions: .xls, .xlsx</span>
                    </div>
                </div>
            </main>
            <footer>
                <div class="ppg-container-cols">
                    <div style="grid-column: 1 / span 6;">
                        @(Html.DevExtreme().Button()
                            .ID("cancelButton")
                            .Text("Cancel")
                            .Type(ButtonType.Normal)
                            .UseSubmitBehavior(false)
                            .OnClick("PPG.manageContainerRates.cancelButton_onClick"))
                    </div>
                    <div style="grid-column: 7 / span 6;" class="right">
                        @(Html.DevExtreme().Button()
                            .ID("submitButton")
                            .Text("Upload")
                            .Type(ButtonType.Success)
                            .Disabled(true)
                            .UseSubmitBehavior(false)
                            .OnClick("PPG.manageContainerRates.submitButton_onClick")
                    )
                    </div>
                </div>
            </footer>
        </div>
    </form>

}

@(Html.DevExtreme().DataGrid<IEnumerable<ActiveGroupViewModel>>()
    .ID("exportGrid")
    .Export(e => e.Enabled(true).AllowExportSelectedData(false))
    .OnExporting("PPG.manageContainerRates.exportGrid_onExporting")
    .Visible(false))


@section Scripts {
    <environment include="Development">
        <script src="~/js/ppg/ppg.service-management-container-rates.bundle.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/ppg/ppg.service-management-container-rates.bundle.min.js" asp-append-version="true"></script>
    </environment>
    
    <script>
        document.addEventListener('DOMContentLoaded', function documentReady() {
            this.removeEventListener('DOMContentLoaded', documentReady);
            PPG.manageContainerRates.init();
        });
    </script>
}
