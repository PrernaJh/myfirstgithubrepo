@using PackageTracker.Domain.Models
@model ManageSiteAlertViewModel

@{
    ViewData["Title"] = "Service Management";
}

<h2 class="content-block">Service Management <i class="dx-icon dx-icon-spinright"></i> Manage Site Alerts</h2>
<p class="page-desc">Site alerts represent a way to add or remove an email​ to a list.</p>

<div class="content-block">
    <div class="dx-card">
        <div class="ppg-container-cols">
            <div class="dx-col-2">
                <label>Site</label>

                @(Html.DevExtreme().SelectBox()
                    .ID("siteName")
                    .Name("SiteName")
                    .DataSource(d => d.Mvc().Controller("Common").LoadAction("GetSiteSelectBoxData"))
                    .Placeholder("Name")
                    .DisplayExpr("Description")
                    .DeferRendering(false)
                    .ValueExpr("Name").DataSourceOptions(opt =>
                    {
                        if (User.GetSite() != SiteConstants.AllSites)
                        {
                            opt.Filter($"['Name', '=', '{User.GetSite()}']");
                        }
                    })
                    .OnValueChanged("PPG.userManagement.onSiteValueChanged")
                    .Width(250))
            </div>
        </div>
    </div>
    <div class="dx-card">
        @(Html.DevExtreme().DataGrid<CriticalEmailModel>()
            .DataSource(d => d.WebApi()
                .Controller("SiteManagement")
                .LoadAction("CriticalEmailList")
                .LoadParams(new
                {
                    siteName = new JS("PPG.userManagement.getSelectedSite")
                })
                .InsertAction("CriticalEmailList")
                .DeleteAction("CriticalEmailList")
                .Key("EmailSiteNameId")
            )
            .RemoteOperations(true)
            .ID("gridUsersContainer")
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .ShowBorders(true)
            .FocusedRowEnabled(true)
            .Selection(s => s.Mode(SelectionMode.Single))
            .AllowColumnResizing(true)
            .ColumnResizingMode(ColumnResizingMode.Widget)
            .AllowColumnReordering(true)
            .SearchPanel(searchPanel => searchPanel.Visible(true).Width(240).Placeholder("Search..."))
            .HeaderFilter(hf => hf.Visible(true))
            .Paging(paging => paging.PageSize(10))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 5, 10, 20 });
                pager.ShowInfo(true);
            })
            .OnInitNewRow("PPG.userManagement.onInitNewRow")
            .Columns(columns => {
                columns.AddFor(m => m.EmailSiteNameId).Visible(false);
                columns.AddFor(m => m.Email).AllowHeaderFiltering(false);
                columns.AddFor(m => m.SiteName);
            }).Editing(e => e.Mode(GridEditMode.Popup)
                .AllowAdding(true)
                .AllowDeleting(true)
                .Popup(p => p
                    .Title("Create Site Alert")
                    .ShowTitle(true)
                    .Width(300)
                    .Height(430)
                    .Position(pos => pos
                        .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                        .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                        .Of(new JS("window"))
                    )
                )
            .Form(f => f.Items(items =>
            {
                items.AddSimpleFor(m => m.Email).DataField("Email")
                    .Editor(e=>e.TextBox()
                                .Width(250)
                           );

                items.AddEmpty();
                items.AddSimpleFor(m => m.SiteName).DataField("SiteName")
                    .Editor(m => m.TextBox().ReadOnly(true)); 
            }).ColCount(2).ValidationGroup("group").ShowValidationSummary(true)
                    )))
    </div>
    @section Scripts {
        <environment include="Development">
            <script src="~/js/ppg/ppg.user-management.bundle.min.js" asp-append-version="true"></script>
        </environment>
        <environment exclude="Development">
            <script src="~/js/ppg/ppg.user-management.bundle.min.js" asp-append-version="true"></script>
        </environment>

        <script>
            document.addEventListener('DOMContentLoaded', function documentReady() {
                this.removeEventListener('DOMContentLoaded', documentReady);
                PPG.userManagement.init();
            });
        </script>
    }

</div>
